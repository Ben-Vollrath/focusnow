name: Flutter CI/CD to Google Play Console

on:
  push:
    branches:
      - production

permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: macos-latest

    steps:
      #1 Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

        #2 Setup Java
      - name: Set Up Java
        uses: actions/setup-java@v3.12.0
        with:
          distribution: "oracle"
          java-version: "17"

        #3 Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.0"
          channel: "stable"

          #4 Install Dependencies
      - name: Install Dependencies
        run: flutter pub get
        working-directory: ./mobile

        #5 Setup Keystore
      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
        working-directory: ./mobile

      - name: Create key.properties
        run: |
          echo 'storePassword=${{ secrets.KEYSTORE_PASSWORD }}' > android/key.properties
          echo 'keyPassword=${{ secrets.KEY_PASSWORD }}' >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties
        working-directory: ./mobile

      - name: List Keystore Contents
        run: |
          keytool -list -v -keystore android/app/keystore.jks -storepass '${{ secrets.KEYSTORE_PASSWORD }}'
        working-directory: ./mobile

      - name: Creating .env
        run: echo "${{ secrets.ENV_FILE }}" > .env
        working-directory: ./mobile

        #7 Building App Bundle (aab)
      - name: Build appBundle
        run: flutter build appbundle --release
        working-directory: ./mobile

      - name: Build APK
        run: flutter build apk --release
        working-directory: ./mobile

        #9 Upload Artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: appbundle
          path: mobile/build/app/outputs/bundle/release/app-release.aab

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: mobile/build/app/outputs/flutter-apk/app-release.apk

  deploy-function:
    runs-on: ubuntu-latest

    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      PROJECT_ID: pozdstowggghedxrqbgk

    steps:
      - uses: actions/checkout@v3

      - uses: supabase/setup-cli@v1
        with:
          version: latest

      - run: supabase functions deploy handle-completed-study-session --project-ref $PROJECT_ID
      - run: supabase functions deploy create-goal --project-ref $PROJECT_ID
  deploy-migration:
    runs-on: ubuntu-latest

    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      PROJECT_ID: pozdstowggghedxrqbgk

    steps:
      - uses: actions/checkout@v3

      - uses: supabase/setup-cli@v1
        with:
          version: latest

      - run: supabase link --project-ref $PROJECT_ID --password $SUPABASE_DB_PASSWORD
      - run: supabase db push
  deploy:
    needs: [build, deploy-function, deploy-migration]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Download the artifact created in the 'test' job
      - name: Download appbundle artifact
        uses: actions/download-artifact@v4
        with:
          name: appbundle

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: apk

      - name: Deploy to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: io.vollrath.focusnow
          releaseFiles: app-release.aab
          track: internal # Change to production when ready
          status: draft
          #changesNotSentForReview: true

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ github.run_number }}"
          body: "This release includes the latest app bundle and APK."
          artifacts: |
            app-release.aab
            app-release.apk
